/**
 * ScanActivity
 * @author Mali
 */
package com.unknow.cpt;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.unknow.cpt.R;
import com.unknow.cpt.product.Product;
import com.unknow.cpt.product.ProductHelper;
import com.unknow.cpt.product.ProductNotFoundException;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.widget.Button;
import android.widget.ExpandableListView;
import android.widget.ImageView;
import android.widget.SimpleExpandableListAdapter;
import android.widget.Toast;


public class ScanActivity extends Activity {
	public static Activity scanActivity;
	private ExpandableListView list;
	private List<List<Map<String, String>>> childs;
	private Button btn_camera;
	private View scanView;
	private ProgressDialog myDialog;
	private Product p;
	private Handler mHandler;
	private SimpleExpandableListAdapter adapter;
	private static final int MSG_SUCCESS = 0;//Downloading product data flag
    private static final int MSG_FAILURE = 1;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		scanActivity = this.scanActivity;
		setContentView(R.layout.activity_scan);
		/**btn_camera = (Button) MainActivity.mainActivity.findViewById(R.id.radio_button2);
		btn_camera.setOnClickListener(new OnClickListener(){

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent intent = new Intent(ScanActivity.this,com.google.zxing.client.android.CaptureActivity.class);
				intent.putExtra("SCAN_MODE", "PRODUCT_MODE");
				startActivityForResult(intent, 0);
			}
			
		});**/
		scanView = this.findViewById(R.id.scan_view);
		scanView.setVisibility(View.GONE);
		setupLists();
		Intent intent = new Intent(this,com.google.zxing.client.android.CaptureActivity.class);
		intent.putExtra("SCAN_MODE", "PRODUCT_MODE");
		startActivityForResult(intent, 0);
	}
	private void setupLists(){
		//List1 setup
		list = (ExpandableListView) this.findViewById(R.id.expandableListView1);
		List<Map<String, String>> gruops = new ArrayList<Map<String,String>>();
		Map<String, String> title;
		String[] titles = {"Overall","Energy Use","Water Use","CO2 Footprint Use","Location Use","Rating & Comments"};
		for(int i=0;i<6;i++){
			title = new HashMap<String, String>();
			title.put("group", titles[i]);
			gruops.add(title);
		}
		/**Map<String, String> content_1 = new HashMap<String, String>();
		Map<String, String> content_2 = new HashMap<String, String>();
		content_1.put("child", "ANDROID");
		content_2.put("child", "IOS");
		List<Map<String, String>> childs_1 = new ArrayList<Map<String,String>>(); 
		childs_1.add(content_1);
		childs_1.add(content_2);**/
        
		childs = new ArrayList<List<Map<String,String>>>();
		//Give an Empty Child
		for(int i=0;i<6;i++){
			Map<String, String> content = new HashMap<String, String>();
			content.put("child", " ");
			List<Map<String, String>> child_1 = new ArrayList<Map<String,String>>();
			child_1.add(content);
			childs.add(child_1);
		}
		//childs.add(childs_1);
		adapter = new SimpleExpandableListAdapter(
                this, gruops, R.drawable.expandablelistview_groups, new String[]{"group"}, new int[]{R.id.textGroup},   
                childs, R.drawable.expandablelistview_child, new String[]{"child"}, new int[]{R.id.textChild}  
                );
        list.setAdapter(adapter);

	}
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
	}
	
	@Override
	protected void onRestart() {
		// TODO Auto-generated method stub
		super.onRestart();
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		// TODO Auto-generated method stub
        if (requestCode == 0) {
            if (resultCode == RESULT_OK) {
               String contents = data.getStringExtra("SCAN_RESULT");
               // Do something with scanned string
               Toast.makeText(this, "got barcode"+contents, Toast.LENGTH_LONG).show();
               Log.i("debug", "got barcode");
               mHandler = new Handler(){
            	   public void handleMessage(Message msg){
            		   switch(msg.what){
            		   		case MSG_SUCCESS:
            		   			if(p!=null){
            		   				//Update UI
            		   				updateUI();
            		   			}
            		   			break;
            		   		case MSG_FAILURE:
            		   			break;
            		   }
            	   }
               };
               myDialog = ProgressDialog.show(ScanActivity.this, "Searching","Please wait...", true);
               new Thread() {
            	   public void run() {
            		   try {
            			   ProductHelper ph = new ProductHelper();
            			   p = ph.getProductInfo("1");
            			   sleep(3000);
            			   if(p!=null){
            				   Log.i("Product Name", p.getProductName());
            				   mHandler.obtainMessage(MSG_SUCCESS).sendToTarget();
            				   return;
            			   }
            			   
            			}catch(ProductNotFoundException e){
            				Toast.makeText(ScanActivity.this, "Product can not be found", Toast.LENGTH_LONG);
            				mHandler.obtainMessage(MSG_FAILURE).sendToTarget();
            				return;
            			}
            		   catch (Exception e){
	           				mHandler.obtainMessage(MSG_FAILURE).sendToTarget();
	           				return;
            			} finally {
            				   myDialog.dismiss();
            			}
            		  }
            	   }.start();
               scanView.setVisibility(View.VISIBLE);
            }
            else{
            	MainActivity.mTabHost.setCurrentTabByTag("tab_tag_recent");
            }
         }
	}
	

	
	
    public boolean onKeyDown(int keyCode, KeyEvent event) {
    	// TODO Auto-generated method stub
    	if (keyCode == KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0){
    		AlertDialog.Builder builder = new Builder(this);
    		builder.setMessage("Do you want to exit?");
    		builder.setPositiveButton("YES", new DialogInterface.OnClickListener(){

				@Override
				public void onClick(DialogInterface arg0, int arg1) {
					// TODO Auto-generated method stub
					finish();
				}
    			
    		});
    		builder.setNegativeButton("NO", new DialogInterface.OnClickListener(){

				@Override
				public void onClick(DialogInterface dialog, int which) {
					// TODO Auto-generated method stub
					
				}
    			
    		});
    		builder.show();
    	}
    	return false;
    }
    private void updateUI(){
    	childs.clear();
    	String[] product_info = {p.getProductDescription(),p.getEnergy(),p.getWater(),p.getCO2()," "," "};
    	for(int i=0;i<6;i++){
    		Map<String, String> content = new HashMap<String, String>();
    		content.put("child", product_info[i]);
    		List<Map<String, String>> child_1 = new ArrayList<Map<String,String>>();
    		child_1.add(content);
    		childs.add(child_1);
    	}
    	adapter.notifyDataSetChanged();
    	if(p.getBitmap()!=null){
    		ImageView iv = (ImageView) this.findViewById(R.id.imageView1);
    		iv.setImageBitmap(p.getBitmap());
    	}
    }
	
}
