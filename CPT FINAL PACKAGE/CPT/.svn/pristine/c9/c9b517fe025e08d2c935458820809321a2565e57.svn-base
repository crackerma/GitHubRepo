/**
 * 
 */
package com.unknow.cpt;

import java.util.ArrayList;
import java.util.HashMap;

import com.unknow.cpt.R;
import com.unknow.cpt.history.FavouriteManager;
import com.unknow.cpt.history.HistoryManager;
import com.unknow.cpt.history.RecentManager;
import com.unknow.cpt.product.Product;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.DialogInterface;
import android.os.Bundle;
import android.util.Log;
import android.view.ContextMenu;
import android.view.KeyEvent;
import android.view.MenuItem;
import android.view.View;
import android.view.ContextMenu.ContextMenuInfo;
import android.view.View.OnCreateContextMenuListener;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemLongClickListener;


public class FavouriteActivity extends Activity {
	ArrayList<HashMap<String, Object>> listItem;
	ListView favouriteList;
	HashMap<String, Object> checkedItem;
	SimpleAdapter listItemAdapter;
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_favourite);
		loadData();
		listViewListenerSetup();
	}
	private void loadData(){
		listItem = new ArrayList<HashMap<String, Object>>();
		HistoryManager hm = new FavouriteManager(this);
		if(hm.hasItems()){
			ArrayList<Object> os = (ArrayList<Object>) hm.getItems();
			for(Object o : os){
				Product p = (Product)o;
				HashMap<String, Object> map = new HashMap<String, Object>();
				map.put("ItemID", p.getProductID());
				map.put("ItemTitle", p.getProductName());
				listItem.add(map);
			}
		}
	}
	private void listViewListenerSetup(){
		favouriteList = (ListView) this.findViewById(R.id.favourite_view);
        listItemAdapter = new SimpleAdapter(this,listItem,
	            R.layout.list_recent,
	            new String[] {"ItemID","ItemTitle"},
	            new int[] {R.id.item_id,R.id.item_title}  
	        ); 
        favouriteList.setAdapter(listItemAdapter);
        favouriteList.setOnItemLongClickListener(new OnItemLongClickListener(){

			@Override
			public boolean onItemLongClick(AdapterView<?> arg0, View arg1,
					int arg2, long arg3) {
				// TODO Auto-generated method stub
				checkedItem = (HashMap<String, Object>) favouriteList.getItemAtPosition(arg2);
				return false;
			}
			
		});
        favouriteList.setOnCreateContextMenuListener(new OnCreateContextMenuListener() {  
            
            @Override  
            public void onCreateContextMenu(ContextMenu menu, View v,ContextMenuInfo menuInfo) {  
                menu.setHeaderTitle("Options");
                menu.add(0, 0, 0, "DELETE").setIcon(android.R.drawable.ic_menu_delete);
            }

        });
	}
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		loadData();
		listViewListenerSetup();
	}
	@Override
	public boolean onContextItemSelected(MenuItem item) {
		// TODO Auto-generated method stub
    	if(item.getTitle() == "DELETE"){
    		//Delete item from listview
    		Product p = new Product(checkedItem.get("ItemID").toString(),checkedItem.get("ItemTitle").toString());
    		HistoryManager hm = new FavouriteManager(this);
    		if(hm.getItem(p.getProductID()) == null){
    			Toast.makeText(this, "Data not exist in database", Toast.LENGTH_LONG).show();
    		}else{
    			hm.deleteItem(p.getProductID());
        		listItem.remove(checkedItem);
        		listItemAdapter.notifyDataSetChanged();
    		}
    	}
		return super.onContextItemSelected(item);
	}
    public boolean onKeyDown(int keyCode, KeyEvent event) {
    	// TODO Auto-generated method stub
    	if (keyCode == KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0){
    		AlertDialog.Builder builder = new Builder(this);
    		builder.setMessage("Do you want to exit?");
    		builder.setPositiveButton("YES", new DialogInterface.OnClickListener(){

				@Override
				public void onClick(DialogInterface arg0, int arg1) {
					// TODO Auto-generated method stub
					finish();
				}
    			
    		});
    		builder.setNegativeButton("NO", new DialogInterface.OnClickListener(){

				@Override
				public void onClick(DialogInterface dialog, int which) {
					// TODO Auto-generated method stub
					
				}
    			
    		});
    		builder.show();
    	}
    	return false;
    }
}
